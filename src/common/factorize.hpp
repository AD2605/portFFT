
/***************************************************************************
 *
 *  Copyright (C) Codeplay Software Ltd.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  Codeplay's SYCL-FFT
 *
 **************************************************************************/
#ifndef SYCL_FFT_COMMON_FACTORIZE_HPP
#define SYCL_FFT_COMMON_FACTORIZE_HPP

namespace sycl_fft::detail{

/**
 * Determines the largest factor of N that is smaller than or equal to sqrt(N) - in static constexpr member factor.
 * @tparam N size to factorize
*/
template<int N>
struct factorize{
    static_assert(N!=N, "not implemented");
};

#define SYCL_FFT_FACTORIZE_IMPL(NUM, FACTOR) \
template<> \
struct factorize<NUM>{ \
    static constexpr int factor = FACTOR; \
};

SYCL_FFT_FACTORIZE_IMPL(1,1)
SYCL_FFT_FACTORIZE_IMPL(2,1)
SYCL_FFT_FACTORIZE_IMPL(3,1)
SYCL_FFT_FACTORIZE_IMPL(4,2)
SYCL_FFT_FACTORIZE_IMPL(5,1)
SYCL_FFT_FACTORIZE_IMPL(6,2)
SYCL_FFT_FACTORIZE_IMPL(7,1)
SYCL_FFT_FACTORIZE_IMPL(8,2)
SYCL_FFT_FACTORIZE_IMPL(9,3)
SYCL_FFT_FACTORIZE_IMPL(10,2)
SYCL_FFT_FACTORIZE_IMPL(11,1)
SYCL_FFT_FACTORIZE_IMPL(12,3)
SYCL_FFT_FACTORIZE_IMPL(13,1)
SYCL_FFT_FACTORIZE_IMPL(14,2)
SYCL_FFT_FACTORIZE_IMPL(15,3)
SYCL_FFT_FACTORIZE_IMPL(16,4)
SYCL_FFT_FACTORIZE_IMPL(17,1)
SYCL_FFT_FACTORIZE_IMPL(18,3)
SYCL_FFT_FACTORIZE_IMPL(19,1)
SYCL_FFT_FACTORIZE_IMPL(20,4)
SYCL_FFT_FACTORIZE_IMPL(21,3)
SYCL_FFT_FACTORIZE_IMPL(22,2)
SYCL_FFT_FACTORIZE_IMPL(23,1)
SYCL_FFT_FACTORIZE_IMPL(24,4)
SYCL_FFT_FACTORIZE_IMPL(25,5)
SYCL_FFT_FACTORIZE_IMPL(26,2)
SYCL_FFT_FACTORIZE_IMPL(27,3)
SYCL_FFT_FACTORIZE_IMPL(28,4)
SYCL_FFT_FACTORIZE_IMPL(29,1)
SYCL_FFT_FACTORIZE_IMPL(30,5)
SYCL_FFT_FACTORIZE_IMPL(31,1)
SYCL_FFT_FACTORIZE_IMPL(32,4)
SYCL_FFT_FACTORIZE_IMPL(33,3)
SYCL_FFT_FACTORIZE_IMPL(34,2)
SYCL_FFT_FACTORIZE_IMPL(35,5)
SYCL_FFT_FACTORIZE_IMPL(36,6)
SYCL_FFT_FACTORIZE_IMPL(37,1)
SYCL_FFT_FACTORIZE_IMPL(38,2)
SYCL_FFT_FACTORIZE_IMPL(39,3)
SYCL_FFT_FACTORIZE_IMPL(40,5)
SYCL_FFT_FACTORIZE_IMPL(41,1)
SYCL_FFT_FACTORIZE_IMPL(42,6)
SYCL_FFT_FACTORIZE_IMPL(43,1)
SYCL_FFT_FACTORIZE_IMPL(44,4)
SYCL_FFT_FACTORIZE_IMPL(45,5)
SYCL_FFT_FACTORIZE_IMPL(46,2)
SYCL_FFT_FACTORIZE_IMPL(47,1)
SYCL_FFT_FACTORIZE_IMPL(48,6)
SYCL_FFT_FACTORIZE_IMPL(49,7)
SYCL_FFT_FACTORIZE_IMPL(50,5)
SYCL_FFT_FACTORIZE_IMPL(51,3)
SYCL_FFT_FACTORIZE_IMPL(52,4)
SYCL_FFT_FACTORIZE_IMPL(53,1)
SYCL_FFT_FACTORIZE_IMPL(54,6)
SYCL_FFT_FACTORIZE_IMPL(55,5)
SYCL_FFT_FACTORIZE_IMPL(56,7)
SYCL_FFT_FACTORIZE_IMPL(57,3)
SYCL_FFT_FACTORIZE_IMPL(58,2)
SYCL_FFT_FACTORIZE_IMPL(59,1)
SYCL_FFT_FACTORIZE_IMPL(60,6)
SYCL_FFT_FACTORIZE_IMPL(61,1)
SYCL_FFT_FACTORIZE_IMPL(62,2)
SYCL_FFT_FACTORIZE_IMPL(63,7)
SYCL_FFT_FACTORIZE_IMPL(64,8)
// 64 is likely the largest size we will be able to handle within one workitem on current GPUs

};

#undef SYCL_FFT_FACTORIZE_IMPL

#endif
